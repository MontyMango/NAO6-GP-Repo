# Docker-compose help comes from: ai/chat-demo:latest
# We initally planned to do a database to save the user's chat history so the previous chats can be used across all models.
# We decided against it because of the "time crunch" to get the front-end finished.

services:
  api-server:
    container_name: nao6-api-server
    build: "./backend_with_mood_swapping/"
    restart: always
    ports:
      - "43016:43016"
    networks:
      backend:
        ipv4_address: 10.0.68.3
    depends_on:
      - ollama
      # database:
      #   ipv4_address: 10.0.61.3

  ollama:
    container_name: ollama
    build:
      context: ./ollama-docker
      dockerfile: Dockerfile
    volumes:
      - "/ollama:/ollama" # You might need to remove the ./ and replace it with you home directory (Docker doesn't like this)
    # Port to expose on the machine : port to expose in the container
    ports:
      - 11434:11434
    # If we need to limit the AI model, we can use this
    deploy:
      resources:
        # limits:
        #   cpus: "8" # Preferrably 4 for lightweight models, 16 for heavy models
        #   memory: 8G
        reservations:
          cpus: "0.25"
          memory: 2G # Lightweight models require 2GB's of
          # Add nvidia graphics capabilities
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    restart: always
    networks:
      backend:
        ipv4_address: 10.0.68.2
  # database-server:
  #   container_name: mysql-database
  #   image: mysql:latest
  #   environment:
  #     MYSQL_ROOT_PASSWORD: veryverysecretpassword
  #     MYSQL_DATABASE: nao6-db
  #     MYSQL_USER: username
  #     MYSQL_PASSWORD: themostsecretpassword
  #   ports:
  #   - "3306:3306"
  #   volumes:
  #   - db_data:/var/lib/mysql
  #   restart: always
  #   networks:
  #     database:
  #       ipv4_address: 10.0.61.2

volumes:
  ollama_data:
    name: ollama_data
  # db_data:
  #   name: mysql_data

networks:
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: "10.0.68.0/28"
  # database:
  #   driver: bridge
  #   ipam:
  #     config:
  #       - subnet: "10.0.61.0/28"
